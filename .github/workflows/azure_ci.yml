name: Build and Deploy to Azure Container Instances

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11.3
        uses: actions/setup-python@v4
        with:
            python-version: '3.11.3'
            architecture: 'x64'

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v1
        with:
          registry: skywardcontainer.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Delete existing container group
        run: |
          az container delete --name skyward-discord-bot --resource-group skyward-labs --yes

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: skywardcontainer.azurecr.io/skywardbot:latest

      - name: Deploy to Azure Container Instances
        uses: azure/aci-deploy@v1
        with:
          resource-group: skyward-labs
          registry-login-server: skywardcontainer.azurecr.io
          registry-username: ${{ secrets.ACR_USERNAME }}
          registry-password: ${{ secrets.ACR_PASSWORD }}
          name: skyward-discord-bot
          image: skywardcontainer.azurecr.io/skywardbot:latest
          dns-name-label: skyward-discord-bot
          location: eastus
          environment-variables: openai_api_type="azure"
            openai_api_version="2023-03-15-preview"
            openai_api_base="https://skyward-azure-openai.openai.azure.com/"
            discord_prefix="!gpt"
            speech_region="eastus"
            discord_token="${{ secrets.DISCORD_TOKEN }}"
            openai_api_key="${{ secrets.OPENAI_API_KEY }}"
            speech_key="${{ secrets.SPEECH_KEY }}"